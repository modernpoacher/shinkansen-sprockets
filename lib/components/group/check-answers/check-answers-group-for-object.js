"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.default=CheckAnswersGroupForObject;var _react=_interopRequireDefault(require("react"));var _propTypes=_interopRequireDefault(require("prop-types"));var _debug=_interopRequireDefault(require("debug"));var _summaryKey=_interopRequireDefault(require("./summary-key"));var _checkAnswersGroupForObjectSummaryValue=_interopRequireDefault(require("./check-answers-group-for-object-summary-value"));var _changeAnswer=_interopRequireDefault(require("./change-answer"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _slicedToArray(arr,i){return _arrayWithHoles(arr)||_iterableToArrayLimit(arr,i)||_unsupportedIterableToArray(arr,i)||_nonIterableRest();}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");}function _unsupportedIterableToArray(o,minLen){if(!o)return;if(typeof o==="string")return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n==="Object"&&o.constructor)n=o.constructor.name;if(n==="Map"||n==="Set")return Array.from(o);if(n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen);}function _arrayLikeToArray(arr,len){if(len==null||len>arr.length)len=arr.length;for(var i=0,arr2=new Array(len);i<len;i++){arr2[i]=arr[i];}return arr2;}function _iterableToArrayLimit(arr,i){if(typeof Symbol==="undefined"||!(Symbol.iterator in Object(arr)))return;var _arr=[];var _n=true;var _d=false;var _e=undefined;try{for(var _i=arr[Symbol.iterator](),_s;!(_n=(_s=_i.next()).done);_n=true){_arr.push(_s.value);if(i&&_arr.length===i)break;}}catch(err){_d=true;_e=err;}finally{try{if(!_n&&_i["return"]!=null)_i["return"]();}finally{if(_d)throw _e;}}return _arr;}function _arrayWithHoles(arr){if(Array.isArray(arr))return arr;}var log=(0,_debug.default)('shinkansen:sprockets:components:group:check-answers');function CheckAnswersGroupForObject(_ref){var group=_ref.group,resource=_ref.resource;log('CheckAnswersGroupForObject');var _group=_slicedToArray(group,1),field=_group[0];return _react.default.createElement("dl",null,_react.default.createElement(_summaryKey.default,{summaryAnswer:field}),_react.default.createElement(_checkAnswersGroupForObjectSummaryValue.default,{group:group}),_react.default.createElement(_changeAnswer.default,{changeAnswer:field,resource:resource}));}CheckAnswersGroupForObject.propTypes={group:_propTypes.default.array,resource:_propTypes.default.shape({alpha:_propTypes.default.string,omega:_propTypes.default.string}).isRequired};