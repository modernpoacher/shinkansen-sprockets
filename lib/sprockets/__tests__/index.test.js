"use strict";function _typeof(obj){"@babel/helpers - typeof";if(typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"){_typeof=function _typeof(obj){return typeof obj;};}else{_typeof=function _typeof(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj;};}return _typeof(obj);}var _react=_interopRequireDefault(require("react"));var _reactTestRenderer=_interopRequireDefault(require("react-test-renderer"));var _enzyme=_interopRequireWildcard(require("enzyme"));var _enzymeAdapterReact=_interopRequireDefault(require("enzyme-adapter-react-16"));var _classnames=_interopRequireDefault(require("classnames"));var _title=_interopRequireDefault(require("../../components/title"));var _group=_interopRequireDefault(require("../../components/group"));var _=_interopRequireDefault(require("./.."));function _getRequireWildcardCache(){if(typeof WeakMap!=="function")return null;var cache=new WeakMap();_getRequireWildcardCache=function _getRequireWildcardCache(){return cache;};return cache;}function _interopRequireWildcard(obj){if(obj&&obj.__esModule){return obj;}if(obj===null||_typeof(obj)!=="object"&&typeof obj!=="function"){return{default:obj};}var cache=_getRequireWildcardCache();if(cache&&cache.has(obj)){return cache.get(obj);}var newObj={};var hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj){if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;if(desc&&(desc.get||desc.set)){Object.defineProperty(newObj,key,desc);}else{newObj[key]=obj[key];}}}newObj.default=obj;if(cache){cache.set(obj,newObj);}return newObj;}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}_enzyme.default.configure({adapter:new _enzymeAdapterReact.default()});jest.mock('classnames',function(){return jest.fn(function(){return'MOCK CLASSNAME';});});jest.mock("../../components/title");jest.mock("../../components/group");describe('shinkansen-sprockets/sprockets',function(){describe('<Sprocket />',function(){describe('With required props',function(){var component=_react.default.createElement(_.default,{title:"MOCK TITLE"});it('renders',function(){return expect(_reactTestRenderer.default.create(component).toJSON()).toMatchSnapshot();});describe('Prototype',function(){describe('`getClassName`',function(){it('is defined',function(){return expect(_.default.prototype.getClassName).toBeDefined();});});describe('`shouldComponentUpdate`',function(){it('is defined',function(){return expect(_.default.prototype.shouldComponentUpdate).toBeDefined();});});describe('`renderTitle`',function(){it('is defined',function(){return expect(_.default.prototype.renderTitle).toBeDefined();});});describe('`renderGroup`',function(){it('is defined',function(){return expect(_.default.prototype.renderGroup).toBeDefined();});});});describe('Instance',function(){var instance;beforeEach(function(){var wrapper=(0,_enzyme.shallow)(component);instance=wrapper.instance();});describe('`getTitle`',function(){it('is defined',function(){return expect(instance.getTitle).toBeDefined();});});describe('`setTitle`',function(){it('is defined',function(){return expect(instance.setTitle).toBeDefined();});});describe('`getGroup`',function(){it('is defined',function(){return expect(instance.getGroup).toBeDefined();});});describe('`setGroup`',function(){it('is defined',function(){return expect(instance.setGroup).toBeDefined();});});});});describe('With additional props',function(){it('renders',function(){var component=_react.default.createElement(_.default,{title:"MOCK TITLE",onChange:jest.fn()});return expect(_reactTestRenderer.default.create(component).toJSON()).toMatchSnapshot();});});describe('`getTitle()`',function(){it('returns the `title` field of the instance',function(){var component=_react.default.createElement(_.default,{title:"MOCK TITLE"});var wrapper=(0,_enzyme.shallow)(component);var instance=wrapper.instance();var mockTitle={};instance.title=mockTitle;return expect(instance.getTitle()).toBe(mockTitle);});});describe('`setTitle()`',function(){describe('With a parameter',function(){it('sets the parameter to the instance as the field `title`',function(){var component=_react.default.createElement(_.default,{title:"MOCK TITLE"});var instance=(0,_enzyme.shallow)(component).instance();var mockTitle={};instance.setTitle(mockTitle);return expect(instance.title).toBe(mockTitle);});});describe('Without any parameters',function(){it('deletes the field `title` from the instance',function(){var component=_react.default.createElement(_.default,{title:"MOCK TITLE"});var instance=(0,_enzyme.shallow)(component).instance();instance.setTitle();return expect(instance.title).toBeUndefined();});});});describe('`getGroup()`',function(){it('returns the `group` field of the instance',function(){var component=_react.default.createElement(_.default,{group:"MOCK TITLE"});var wrapper=(0,_enzyme.shallow)(component);var instance=wrapper.instance();var mockGroup={};instance.group=mockGroup;return expect(instance.getGroup()).toBe(mockGroup);});});describe('`setGroup()`',function(){describe('With a parameter',function(){it('sets the parameter to the instance as the field `group`',function(){var component=_react.default.createElement(_.default,{title:"MOCK TITLE"});var instance=(0,_enzyme.shallow)(component).instance();var mockGroup={};instance.setGroup(mockGroup);return expect(instance.group).toBe(mockGroup);});});describe('Without any parameters',function(){it('deletes the field `group` from the instance',function(){var component=_react.default.createElement(_.default,{group:"MOCK TITLE"});var instance=(0,_enzyme.shallow)(component).instance();instance.setGroup();return expect(instance.group).toBeUndefined();});});});describe('`getClassName()`',function(){beforeEach(function(){_classnames.default.mockReset();});describe('With required props',function(){var returnValue;beforeEach(function(){var component=_react.default.createElement(_.default,{title:"MOCK TITLE"});var instance=(0,_enzyme.shallow)(component).instance();returnValue=instance.getClassName();});it('does not invoke `classnames`',function(){return expect(_classnames.default).not.toBeCalled();});it('returns the classname',function(){return expect(returnValue).toBe('sprocket');});});});describe('`shouldComponentUpdate()`',function(){var MOCK_ONCHANGE=jest.fn();var component=_react.default.createElement(_.default,{title:"MOCK TITLE",onChange:MOCK_ONCHANGE});var instance;beforeEach(function(){var wrapper=(0,_enzyme.shallow)(component);instance=wrapper.instance();});describe('`props` have changed',function(){it('returns true',function(){return expect(instance.shouldComponentUpdate({title:'MOCK CHANGE LEGEND',onChange:jest.fn()})).toBe(true);});});describe('`props` have not changed',function(){it('returns false',function(){return expect(instance.shouldComponentUpdate({title:'MOCK TITLE',onChange:MOCK_ONCHANGE})).toBe(false);});});});xdescribe('`renderTitle()`',function(){var MOCK_ONCHANGE=jest.fn();var component=_react.default.createElement(_.default,{title:"MOCK TITLE",onChange:MOCK_ONCHANGE});var instance;beforeEach(function(){var wrapper=(0,_enzyme.mount)(component);instance=wrapper.instance();instance.renderTitle();});it('renders `<Title />`',function(){return expect(_title.default).toBeCalledWith({title:'MOCK TITLE'},{});});});describe('`renderGroup()`',function(){var MOCK_ONCHANGE=jest.fn();var component=_react.default.createElement(_.default,{title:"MOCK TITLE",onChange:MOCK_ONCHANGE});var instance;beforeEach(function(){var wrapper=(0,_enzyme.mount)(component);instance=wrapper.instance();instance.renderGroup();});it('renders `<Group />`',function(){return expect(_group.default).toBeCalledWith({onChange:MOCK_ONCHANGE,children:expect.any(Array)},{});});});});});