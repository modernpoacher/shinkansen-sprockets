"use strict";function _typeof(obj){if(typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"){_typeof=function _typeof(obj){return typeof obj;};}else{_typeof=function _typeof(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj;};}return _typeof(obj);}var _react=_interopRequireDefault(require("react"));var _reactTestRenderer=_interopRequireDefault(require("react-test-renderer"));var _enzyme=_interopRequireWildcard(require("enzyme"));var _enzymeAdapterReact=_interopRequireDefault(require("enzyme-adapter-react-16"));var _classnames=_interopRequireDefault(require("classnames"));var _legend=_interopRequireDefault(require("../../components/legend"));var _=_interopRequireDefault(require("./.."));function _getRequireWildcardCache(){if(typeof WeakMap!=="function")return null;var cache=new WeakMap();_getRequireWildcardCache=function _getRequireWildcardCache(){return cache;};return cache;}function _interopRequireWildcard(obj){if(obj&&obj.__esModule){return obj;}if(obj===null||_typeof(obj)!=="object"&&typeof obj!=="function"){return{default:obj};}var cache=_getRequireWildcardCache();if(cache&&cache.has(obj)){return cache.get(obj);}var newObj={};var hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj){if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;if(desc&&(desc.get||desc.set)){Object.defineProperty(newObj,key,desc);}else{newObj[key]=obj[key];}}}newObj.default=obj;if(cache){cache.set(obj,newObj);}return newObj;}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}_enzyme.default.configure({adapter:new _enzymeAdapterReact.default()});jest.mock('classnames',function(){return jest.fn(function(){return'MOCK CLASSNAME';});});jest.mock("../../components/legend");describe('shinkansen-sprockets/sprockets',function(){describe('<Sprocket />',function(){describe('With required props',function(){var component=_react.default.createElement(_.default,{legend:"MOCK LEGEND"});it('renders',function(){expect(_reactTestRenderer.default.create(component).toJSON()).toMatchSnapshot();});describe('Prototype',function(){describe('`getClassName`',function(){it('is defined',function(){expect(_.default.prototype.getClassName).toBeDefined();});});describe('`shouldComponentUpdate`',function(){it('is defined',function(){expect(_.default.prototype.shouldComponentUpdate).toBeDefined();});});describe('`renderLegend`',function(){it('is defined',function(){expect(_.default.prototype.renderLegend).toBeDefined();});});});describe('Instance',function(){var instance;beforeEach(function(){var wrapper=(0,_enzyme.shallow)(component);instance=wrapper.instance();});describe('`getLegend`',function(){it('is defined',function(){expect(instance.getLegend).toBeDefined();});});describe('`setLegend`',function(){it('is defined',function(){expect(instance.setLegend).toBeDefined();});});});});describe('With additional props',function(){it('renders',function(){var component=_react.default.createElement(_.default,{legend:"MOCK LEGEND",onChange:jest.fn()});expect(_reactTestRenderer.default.create(component).toJSON()).toMatchSnapshot();});});describe('`getLegend()`',function(){it('returns the `legend` field of the instance',function(){var component=_react.default.createElement(_.default,{legend:"MOCK LEGEND"});var wrapper=(0,_enzyme.shallow)(component);var instance=wrapper.instance();var mockLegend={};instance.legend=mockLegend;expect(instance.getLegend()).toBe(mockLegend);});});describe('`setLegend()`',function(){describe('With a parameter',function(){it('sets the parameter to the instance as the field `legend`',function(){var component=_react.default.createElement(_.default,{legend:"MOCK LEGEND"});var instance=(0,_enzyme.shallow)(component).instance();var mockLegend={};instance.setLegend(mockLegend);expect(instance.legend).toBe(mockLegend);});});describe('Without any parameters',function(){it('deletes the field `legend` from the instance',function(){var component=_react.default.createElement(_.default,{legend:"MOCK LEGEND"});var instance=(0,_enzyme.shallow)(component).instance();instance.setLegend();expect(instance.legend).toBeUndefined();});});});describe('`getClassName()`',function(){beforeEach(function(){_classnames.default.mockReset();});describe('With required props',function(){var returnValue;beforeEach(function(){var component=_react.default.createElement(_.default,{legend:"MOCK LEGEND"});var instance=(0,_enzyme.shallow)(component).instance();returnValue=instance.getClassName();});it('does not invoke `classnames`',function(){expect(_classnames.default).not.toBeCalled();});it('returns the classname',function(){expect(returnValue).toBe('sprocket');});});});describe('`shouldComponentUpdate()`',function(){var MOCK_ONCHANGE=jest.fn();var component=_react.default.createElement(_.default,{legend:"MOCK LEGEND",onChange:MOCK_ONCHANGE});var instance;beforeEach(function(){var wrapper=(0,_enzyme.shallow)(component);instance=wrapper.instance();});describe('`props` have changed',function(){it('returns true',function(){expect(instance.shouldComponentUpdate({legend:'MOCK CHANGE LEGEND',onChange:jest.fn()})).toBe(true);});});describe('`props` have not changed',function(){it('returns false',function(){expect(instance.shouldComponentUpdate({legend:'MOCK LEGEND',onChange:MOCK_ONCHANGE})).toBe(false);});});});describe('`renderLegend()`',function(){var MOCK_ONCHANGE=jest.fn();var component=_react.default.createElement(_.default,{legend:"MOCK LEGEND",onChange:MOCK_ONCHANGE});var instance;beforeEach(function(){jest.clearAllMocks();var wrapper=(0,_enzyme.mount)(component);instance=wrapper.instance();instance.renderLegend();});it('renders `<Legend />`',function(){expect(_legend.default).toBeCalledWith({legend:'MOCK LEGEND'},{});});});});});